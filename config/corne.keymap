/*
 * Copyright (c) 2020 The ZMK Contributors
 *
 * SPDX-License-Identifier: MIT
 */

#include <behaviors.dtsi>
#include <dt-bindings/zmk/backlight.h>
#include <dt-bindings/zmk/bt.h>
#include <dt-bindings/zmk/keys.h>
#include <dt-bindings/zmk/rgb.h>

&led_strip { chain-length = <28>; };

chosen { zmk,underglow = &led_strip; };

/ {

  combos {
        compatible = "zmk,combos";

        combo_escape {
            bindings = <&kp ESCAPE>;
            key-positions = <0 1>;
            layers = <0>;
            timeout-ms = <50>;
        };

        combo_question {
            bindings = <&kp SLASH>;
            key-positions = <34 35>;
            layers = <0>;
            timeout-ms = <50>;
        };

        combo_print_screen {
            bindings = <&kp RC(RG(RS(N4)))>;
            key-positions = <37 36>;
        };

        combo_app {
            bindings = <&kp RC(SPACE)>;
            key-positions = <37 38>;
        };

        combo_bluet_layer {
            bindings = <&mo 3>;
            key-positions = <39 40 41>;
        };
    };

    behaviors {
        homerow_mod_kp: homerow_mod_kp {
            compatible = "zmk,behavior-hold-tap";
            label = "HOMEROW_MOD_KP";
            bindings = <&kp>, <&kp>;

            #binding-cells = <2>;
            tapping-term-ms = <300>;
            flavor = "tap-preferred";
        };
    };

    keymap {
        compatible = "zmk,keymap";

        default_layer {
            // -----------------------------------------------------------------------------------------
            // |  TAB |  Q  |  W  |  F  |  P  |  B  |   |  J  |  L   |  U  |  Y  |  :  | BKSP |
            // | CTRL |  A  |  S  |  D  |  F  |  G  |   |  H  |  J   |  K  |  L  |  ;  |  '   |
            // | SHFT |  Z  |  X  |  C  |  V  |  B  |   |  N  |  M   |  ,  |  .  |  /  | ESC  |
            //                    | GUI | LWR | SPC |   | ENT | RSE  | ALT |

            bindings = <
&kp GRAVE  &kp Q  &kp W                           &kp F                       &kp P                       &kp B    &kp J  &kp L                        &kp U                        &kp Y                            &kp SEMICOLON  &kp BSPC
&kp TAB    &kp A  &homerow_mod_kp LEFT_CONTROL R  &homerow_mod_kp LEFT_ALT S  &homerow_mod_kp LEFT_GUI T  &kp G    &kp M  &homerow_mod_kp RIGHT_GUI N  &homerow_mod_kp RIGHT_ALT E  &homerow_mod_kp RIGHT_CONTROL I  &kp O          &kp BACKSLASH
&kp LSHFT  &kp Z  &kp X                           &kp C                       &kp D                       &kp V    &kp K  &kp H                        &kp COMMA                    &kp COMMA                        &kp PERIOD     &kp ENTER
                                                  &mo 2                       &kp SPACE                   &mo 1    &mo 1  &kp SPACE                    &mo 2
            >;
        };

        lower_layer {
            // -----------------------------------------------------------------------------------------
            // |  TAB |  1  |  2  |  3  |  4  |  5  |   |  6  |  7  |  8  |  9  |  0  | BKSP |
            // | BTCLR| BT1 | BT2 | BT3 | BT4 | BT5 |   | LFT | DWN |  UP | RGT |     |      |
            // | SHFT |     |     |     |     |     |   |     |     |     |     |     |      |
            //                    | GUI |     | SPC |   | ENT |     | ALT |

            bindings = <
&trans     &kp N1  &kp N2  &kp N3    &kp N4  &kp N5       &kp N6    &kp N7          &kp N8          &kp N9           &kp N0  &kp BSPC
&trans     &trans  &trans  &trans    &trans  &trans       &kp LEFT  &kp DOWN        &kp UP          &kp RIGHT        &trans  &trans
&kp LSHFT  &trans  &trans  &trans    &trans  &trans       &trans    &kp LEFT_ARROW  &kp DOWN_ARROW  &kp RIGHT_ARROW  &trans  &trans
                           &kp LGUI  &trans  &kp SPACE    &kp RET   &trans          &kp RALT
            >;
        };

        raise_layer {
            // -----------------------------------------------------------------------------------------
            // |  TAB |  !  |  @  |  #  |  $  |  %  |   |  ^  |  &  |  *  |  (  |  )  | BKSP |
            // | CTRL |     |     |     |     |     |   |  -  |  =  |  [  |  ]  |  \  |  `   |
            // | SHFT |     |     |     |     |     |   |  _  |  +  |  {  |  }  | "|" |  ~   |
            //                    | GUI |     | SPC |   | ENT |     | ALT |

            bindings = <
&kp TAB    &kp EXCL  &kp AT  &kp HASH  &kp DLLR  &kp PRCNT    &kp CARET  &kp AMPS   &kp ASTRK  &kp LPAR  &kp RPAR  &kp BSPC
&kp LCTRL  &kp N1    &kp N2  &kp N3    &kp N4    &kp N5       &kp MINUS  &kp EQUAL  &trans     &kp LBKT  &kp RBKT  &kp GRAVE
&kp LSHFT  &kp N6    &kp N7  &kp N8    &kp N9    &kp N0       &kp UNDER  &kp PLUS   &trans     &kp LBRC  &kp RBRC  &kp TILDE
                             &kp LGUI  &trans    &kp SPACE    &kp RET    &trans     &kp RALT
            >;
        };

        layer_kb_control {
            bindings = <
&bt BT_SEL 0    &bt BT_SEL 1  &bt BT_SEL 2  &bt BT_SEL 3  &bt BT_SEL 4  &trans    &trans  &trans  &trans  &trans  &trans  &trans
&bt BT_CLR      &trans        &trans        &trans        &trans        &trans    &trans  &trans  &trans  &trans  &trans  &bl BL_TOG
&bt BT_CLR_ALL  &trans        &trans        &trans        &trans        &trans    &trans  &trans  &trans  &trans  &trans  &rgb_ug RGB_TOG
                                            &trans        &trans        &trans    &trans  &trans  &trans
            >;
        };
    };
};
